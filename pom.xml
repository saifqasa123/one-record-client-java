<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/>
    </parent>
    <groupId>org.iata</groupId>
    <artifactId>onerecord-client</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>onerecord-client</name>
    <description>ONE Record client</description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${httpcore.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${http.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.version}</version>
        </dependency>
    </dependencies>

    <properties>
        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
        <http.version>4.5.11</http.version>
        <httpcore.version>4.4.13</httpcore.version>
        <javax.version>1</javax.version>
        <path.to.nginx.ssl_certificate>src/main/resources/ssl_certificate.crt</path.to.nginx.ssl_certificate>
        <path.to.nginx.ssl_certificate_key>src/main/resources/ssl_certificate_key.key</path.to.nginx.ssl_certificate_key>
        <path.to.nginx.ssl_client_certificate>src/main/resources/ssl_client_certificate.crt</path.to.nginx.ssl_client_certificate>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.example.ClientDemo</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-aws-eb-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- TODO ughhh try to simplify the following packaging logic!, maybe look for a EB Maven plugin intended to create this ZIP package. -->
                                <mkdir dir="${project.build.directory}/${project.build.finalName}-aws-eb-zip/"/>
                                <copy todir="${project.build.directory}/${project.build.finalName}-aws-eb-zip/" overwrite="false">
                                    <fileset dir="${project.build.directory}" includes="${project.build.finalName}.jar"/>
                                </copy>
                                <copy todir="${project.build.directory}/${project.build.finalName}-aws-eb-zip/" overwrite="false">
                                    <fileset dir="./" includes="Procfile"/>
                                </copy>
                                <copy todir="${project.build.directory}/${project.build.finalName}-aws-eb-zip/" overwrite="false">
                                    <fileset dir="./" includes=".platform/**"/>
                                </copy>
                                <!-- Using properties for path to these files as they shouldn't be part of the project directory. -->
                                <copy file="${path.to.nginx.ssl_certificate}" tofile="${project.build.directory}/${project.build.finalName}-aws-eb-zip/.platform/nginx/conf.d/ssl_certificate.crt"/>
                                <copy file="${path.to.nginx.ssl_certificate_key}" tofile="${project.build.directory}/${project.build.finalName}-aws-eb-zip/.platform/nginx/conf.d/ssl_certificate_key.key"/>
                                <copy file="${path.to.nginx.ssl_client_certificate}" tofile="${project.build.directory}/${project.build.finalName}-aws-eb-zip/.platform/nginx/conf.d/ssl_client_certificate.crt"/>
                                <zip compress="false" destfile="${project.build.directory}/${project.build.finalName}-aws-eb.zip" basedir="${project.build.directory}/${project.build.finalName}-aws-eb-zip"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>